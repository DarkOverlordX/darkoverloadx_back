plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'darkoverload'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    // spring boot starter web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // postgreSQL
    implementation group: 'org.postgresql', name:'postgresql', version: '42.2.19'

    // mongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // jpa 추가
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.h2database:h2'

    // redis 설정 주입
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // SpringBoot 3.x이상 QueryDsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 롬복 관련 의존성 주입
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Swagger ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // aws-bucket
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // 파일 업로드
    implementation 'commons-io:commons-io:2.14.0'
    implementation 'commons-fileupload:commons-fileupload:1.5'

    // Apache Tika core 라이브러리 추가
    implementation 'org.apache.tika:tika-core:1.28.4'


    // JUnit5 설정 완료
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'

    // mockito
    testImplementation 'org.mockito:mockito-core:4.0.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.0.0'

}
// QueryDsl 테스트코드 시, QClass 생성
sourceSets {
    main.java.srcDirs += 'build/generated/source/apt/main'
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}
